//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/PlatformInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlatformInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlatformInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlatformInput"",
    ""maps"": [
        {
            ""name"": ""Platform"",
            ""id"": ""2b898cff-fa5c-4a8b-a769-3b74190d92a0"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""94cf90a1-234f-45b6-bf45-c81994cd13a1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f8e1176c-e6f3-49c2-94ea-8c2fcafacee8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""f847fd30-2a2c-47a5-874f-0970b980812d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""057f7dc3-ecfa-405a-9440-eaf7fd6a0edd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grab"",
                    ""type"": ""Button"",
                    ""id"": ""f91bf2af-34cd-4ad8-97c3-1d7efe5a0dee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3a1229ec-857a-4f3b-82af-6060378feaba"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2deb23dd-99f2-488f-8711-eb5d41883415"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""306d46a3-944b-463f-a889-048e4811e75d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6c03a59d-22b2-4b77-8acf-d02f2645d43d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""19f14497-4abf-4722-a9df-789c27570097"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e02cc32c-186d-44e0-ba62-97abeaacff34"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""99202a5b-8d1f-4ef0-969a-d2275e5e8bda"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d19f7700-0e9d-4bb7-8d0f-e2231982d843"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67e368ab-69cf-4b58-95b9-44803326e6c9"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3161d2d0-4cd7-40f2-a8c7-04947648ee6b"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fbad5ff-a679-4d61-b6af-3963ea99e565"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f2bd7d0-32da-4498-bc49-142f07197038"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""826f3c8c-c6ed-4f86-8864-77d6b50acbcf"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b34fff88-8306-4433-80b8-2de3333e1d1e"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Platform
        m_Platform = asset.FindActionMap("Platform", throwIfNotFound: true);
        m_Platform_Move = m_Platform.FindAction("Move", throwIfNotFound: true);
        m_Platform_Jump = m_Platform.FindAction("Jump", throwIfNotFound: true);
        m_Platform_Dash = m_Platform.FindAction("Dash", throwIfNotFound: true);
        m_Platform_Attack = m_Platform.FindAction("Attack", throwIfNotFound: true);
        m_Platform_Grab = m_Platform.FindAction("Grab", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Platform
    private readonly InputActionMap m_Platform;
    private IPlatformActions m_PlatformActionsCallbackInterface;
    private readonly InputAction m_Platform_Move;
    private readonly InputAction m_Platform_Jump;
    private readonly InputAction m_Platform_Dash;
    private readonly InputAction m_Platform_Attack;
    private readonly InputAction m_Platform_Grab;
    public struct PlatformActions
    {
        private @PlatformInput m_Wrapper;
        public PlatformActions(@PlatformInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Platform_Move;
        public InputAction @Jump => m_Wrapper.m_Platform_Jump;
        public InputAction @Dash => m_Wrapper.m_Platform_Dash;
        public InputAction @Attack => m_Wrapper.m_Platform_Attack;
        public InputAction @Grab => m_Wrapper.m_Platform_Grab;
        public InputActionMap Get() { return m_Wrapper.m_Platform; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlatformActions set) { return set.Get(); }
        public void SetCallbacks(IPlatformActions instance)
        {
            if (m_Wrapper.m_PlatformActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlatformActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlatformActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlatformActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_PlatformActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlatformActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlatformActionsCallbackInterface.OnJump;
                @Dash.started -= m_Wrapper.m_PlatformActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlatformActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlatformActionsCallbackInterface.OnDash;
                @Attack.started -= m_Wrapper.m_PlatformActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_PlatformActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_PlatformActionsCallbackInterface.OnAttack;
                @Grab.started -= m_Wrapper.m_PlatformActionsCallbackInterface.OnGrab;
                @Grab.performed -= m_Wrapper.m_PlatformActionsCallbackInterface.OnGrab;
                @Grab.canceled -= m_Wrapper.m_PlatformActionsCallbackInterface.OnGrab;
            }
            m_Wrapper.m_PlatformActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Grab.started += instance.OnGrab;
                @Grab.performed += instance.OnGrab;
                @Grab.canceled += instance.OnGrab;
            }
        }
    }
    public PlatformActions @Platform => new PlatformActions(this);
    public interface IPlatformActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnGrab(InputAction.CallbackContext context);
    }
}
